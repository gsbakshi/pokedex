{"version":3,"sources":["compnents/card/card.component.jsx","compnents/card-list/card-list.component.jsx","compnents/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","pokemon","name","CardList","pokemons","map","index","SearchBox","placeholder","changeHandler","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","res","results","this","filteredPokemons","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAKF,EAAMG,QAAQC,OAIvB,mCAAOJ,EAAMG,QAAQC,KAArB,WCNKC,G,MAAW,SAACL,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEQD,EAAMM,SAASC,KACX,SAACJ,EAASK,GAAV,OAAoB,cAAC,EAAD,CAAwBL,QAAUA,GAAtBK,EAAQ,UCL3CC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,cAAhB,OACrB,uBACIV,UAAU,SACVW,KAAK,SACLF,YAAgBA,EAChBG,SAAaF,MCoCNG,G,wDApCb,aAAgB,IAAD,8BACb,gBAaFH,cAAgB,SAAAI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJF,E,qDAOf,WAAqB,IAAD,OAClBI,MAAM,+CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAG,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,EAAIC,e,oBAQ/C,WAAU,IAAD,EAC2BC,KAAKP,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZW,EAAmBtB,EAASuB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQC,KAAK0B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAK7B,UAAU,MAAf,UACE,yCACA,cAAC,EAAD,CACES,YAAc,iBACdC,cAAkBgB,KAAKhB,gBAEzB,cAAC,EAAD,CAAUL,SAAasB,W,GAjCbI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1c9a3780.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = props => (\n    <div className='card-container'>\n        <img\n            alt={props.pokemon.name}\n            // src={ `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${props.i}.png` }\n            // src={ `https://robohash.org/${props.pokemon.id}/?set=set2&size=180x180` }\n        />\n        <h2> { props.pokemon.name } </h2>\n        {/* <p>{ props.pokemon.email }</p> */}\n    </div>\n);","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => (\n    <div className='card-list'>\n        {\n            props.pokemons.map(\n                (pokemon, index) => <Card key={ index + 1 } pokemon={ pokemon } />\n            )\n        }\n    </div>\n);\n","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, changeHandler }) => (\n    <input\n        className='search'\n        type='search'\n        placeholder = { placeholder }\n        onChange = { changeHandler }\n    />\n);","import React, { Component } from 'react';\nimport { CardList } from './compnents/card-list/card-list.component.jsx';\nimport { SearchBox } from './compnents/search-box/search-box.component.jsx';\nimport './App.css';\n\nclass App extends Component {\n\n\n  constructor () {\n    super();\n    this.state = {\n      pokemons: [],\n      searchField: '',\n    };\n  }\n  componentDidMount() {\n    fetch('https://pokeapi.co/api/v2/pokemon/?limit=10')\n      .then(response => response.json())\n      .then(res => this.setState({ pokemons: res.results })\n      );\n  }\n\n  changeHandler = e => {\n    this.setState({ searchField: e.target.value });\n  }\n  \n  render() {\n    const { pokemons, searchField } = this.state;\n    const filteredPokemons = pokemons.filter(pokemon => \n      pokemon.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Pokedex</h1>\n        <SearchBox\n          placeholder = 'Search Pokemon' \n          changeHandler = { this.changeHandler }\n        />\n        <CardList pokemons = { filteredPokemons } />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}